{"ast":null,"code":"export const drawRoute = (data, map) => {\n  const instructions = document.getElementById('instructions');\n  const tripInstructions = createInsturctions(data);\n  instructions.innerHTML = `<p><strong>Trip distance: ${Math.round(data.distance)} meter <p><strong>Trip duration: ${Math.floor(data.duration / 60)} min </strong></p><ol>${tripInstructions}</ol>`;\n  const route = data.geometry.coordinates;\n  const geojson = {\n    type: 'Feature',\n    properties: {},\n    geometry: {\n      type: 'LineString',\n      coordinates: route\n    }\n  };\n  if (map.getSource('route')) {\n    map.getSource('route').setData(geojson);\n  } else {\n    map.addLayer({\n      id: 'route',\n      type: 'line',\n      source: {\n        type: 'geojson',\n        data: geojson\n      },\n      layout: {\n        'line-join': 'round',\n        'line-cap': 'round'\n      },\n      paint: {\n        'line-color': '#3887be',\n        'line-width': 5,\n        'line-opacity': 0.75\n      }\n    });\n  }\n  ;\n};\nfunction createInsturctions(data) {\n  const legs = data.legs;\n  let tripInstructions = '';\n  for (const step of legs) {\n    const destination = step.summary.split(',').join(' => ', ',');\n    tripInstructions += `<li id='instruction-item'> ${destination}\n                          <div>${Math.round(step.distance)} meter </div>\n                          <div>${Math.floor(step.duration / 60)} min </div>\n                        </li>`;\n  }\n  return tripInstructions;\n}","map":{"version":3,"names":["drawRoute","data","map","instructions","document","getElementById","tripInstructions","createInsturctions","innerHTML","Math","round","distance","floor","duration","route","geometry","coordinates","geojson","type","properties","getSource","setData","addLayer","id","source","layout","paint","legs","step","destination","summary","split","join"],"sources":["/home/rnorbert/IdeaProjects/SARP/sarp/src/components/map/mapbox/helpers/routeDrawer.js"],"sourcesContent":["export const drawRoute = (data, map) => {\n  const instructions = document.getElementById('instructions')\n\n  const tripInstructions = createInsturctions(data)\n\n  instructions.innerHTML = `<p><strong>Trip distance: ${Math.round(\n    data.distance\n  )} meter <p><strong>Trip duration: ${Math.floor(\n    data.duration / 60\n  )} min </strong></p><ol>${tripInstructions}</ol>`\n\n  const route = data.geometry.coordinates\n  const geojson = {\n    type: 'Feature',\n    properties: {},\n    geometry: {\n      type: 'LineString',\n      coordinates: route\n    }\n  }\n\n  if (map.getSource('route')) {\n    map.getSource('route').setData(geojson)\n  } else {\n    map.addLayer({\n      id: 'route',\n      type: 'line',\n      source: {\n        type: 'geojson',\n        data: geojson\n      },\n      layout: {\n        'line-join': 'round',\n        'line-cap': 'round'\n      },\n      paint: {\n        'line-color': '#3887be',\n        'line-width': 5,\n        'line-opacity': 0.75\n      }\n    })\n  };\n}\n\nfunction createInsturctions (data) {\n  const legs = data.legs\n  let tripInstructions = ''\n\n  for (const step of legs) {\n    const destination = step.summary.split(',').join(' => ', ',')\n    tripInstructions += `<li id='instruction-item'> ${destination}\n                          <div>${Math.round(step.distance)} meter </div>\n                          <div>${Math.floor(step.duration / 60)} min </div>\n                        </li>`\n  }\n  return tripInstructions\n}\n"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAGA,CAACC,IAAI,EAAEC,GAAG,KAAK;EACtC,MAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;EAE5D,MAAMC,gBAAgB,GAAGC,kBAAkB,CAACN,IAAI,CAAC;EAEjDE,YAAY,CAACK,SAAS,GAAI,6BAA4BC,IAAI,CAACC,KAAK,CAC9DT,IAAI,CAACU,QACP,CAAE,oCAAmCF,IAAI,CAACG,KAAK,CAC7CX,IAAI,CAACY,QAAQ,GAAG,EAClB,CAAE,yBAAwBP,gBAAiB,OAAM;EAEjD,MAAMQ,KAAK,GAAGb,IAAI,CAACc,QAAQ,CAACC,WAAW;EACvC,MAAMC,OAAO,GAAG;IACdC,IAAI,EAAE,SAAS;IACfC,UAAU,EAAE,CAAC,CAAC;IACdJ,QAAQ,EAAE;MACRG,IAAI,EAAE,YAAY;MAClBF,WAAW,EAAEF;IACf;EACF,CAAC;EAED,IAAIZ,GAAG,CAACkB,SAAS,CAAC,OAAO,CAAC,EAAE;IAC1BlB,GAAG,CAACkB,SAAS,CAAC,OAAO,CAAC,CAACC,OAAO,CAACJ,OAAO,CAAC;EACzC,CAAC,MAAM;IACLf,GAAG,CAACoB,QAAQ,CAAC;MACXC,EAAE,EAAE,OAAO;MACXL,IAAI,EAAE,MAAM;MACZM,MAAM,EAAE;QACNN,IAAI,EAAE,SAAS;QACfjB,IAAI,EAAEgB;MACR,CAAC;MACDQ,MAAM,EAAE;QACN,WAAW,EAAE,OAAO;QACpB,UAAU,EAAE;MACd,CAAC;MACDC,KAAK,EAAE;QACL,YAAY,EAAE,SAAS;QACvB,YAAY,EAAE,CAAC;QACf,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ;EAAC;AACH,CAAC;AAED,SAASnB,kBAAkBA,CAAEN,IAAI,EAAE;EACjC,MAAM0B,IAAI,GAAG1B,IAAI,CAAC0B,IAAI;EACtB,IAAIrB,gBAAgB,GAAG,EAAE;EAEzB,KAAK,MAAMsB,IAAI,IAAID,IAAI,EAAE;IACvB,MAAME,WAAW,GAAGD,IAAI,CAACE,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC;IAC7D1B,gBAAgB,IAAK,8BAA6BuB,WAAY;AAClE,iCAAiCpB,IAAI,CAACC,KAAK,CAACkB,IAAI,CAACjB,QAAQ,CAAE;AAC3D,iCAAiCF,IAAI,CAACG,KAAK,CAACgB,IAAI,CAACf,QAAQ,GAAG,EAAE,CAAE;AAChE,8BAA8B;EAC5B;EACA,OAAOP,gBAAgB;AACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}