{"ast":null,"code":"var _jsxFileName = \"/home/rnorbert/IdeaProjects/SARP/sarp/src/components/map/MapBox.jsx\",\n  _s = $RefreshSig$();\nimport './MapBox.css';\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from 'mapbox-gl-geocoder';\nimport 'mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapBox() {\n  _s();\n  const token = 'pk.eyJ1Ijoibm9yZGJlcmciLCJhIjoiY2xudm14NDFoMDB1MzJqb2JnbHFnZ2F2NSJ9.87wgkopxDP_D8B-OkI11LQ';\n  mapboxgl.accessToken = token;\n  const veszprem = {\n    longitude: 17.909302,\n    latitude: 47.102809\n  };\n  const containerId = 'map';\n  const zoom = 12;\n  const map = new mapboxgl.Map({\n    container: containerId,\n    style: 'mapbox://styles/mapbox/streets-v12',\n    center: [veszprem.longitude, veszprem.latitude],\n    zoom: zoom\n  });\n  let markers = [];\n  let toBeRemovedMarkerList = [];\n  let placeMarker = false;\n  let routeType = 'walking';\n  let routeDetails;\n  function loadMap() {\n    /* map = new mapboxgl.Map({\n      container: containerId,\n      style: 'mapbox://styles/mapbox/streets-v12',\n      center: [veszprem.longitude, veszprem.latitude],\n      zoom: zoom\n    }) */\n\n    map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\n    map.on('click', event => {\n      const mouseCoordinate = event.lngLat.wrap();\n      addMarker(mouseCoordinate);\n    });\n    addGeocoder();\n  }\n  function addGeocoder() {\n    const geocoder = new MapboxGeocoder({\n      accessToken: mapboxgl.accessToken,\n      mapboxgl: mapboxgl\n    });\n    geocoder.on('result', event => {\n      const resultLongitude = event.result.center[0];\n      const resultLatitude = event.result.center[1];\n      const geocoderResultCoordinates = {\n        lng: resultLongitude,\n        lat: resultLatitude\n      };\n      addMarker(geocoderResultCoordinates);\n    });\n    map.addControl(geocoder);\n  }\n  function removeMarkers(list) {\n    list.forEach(element => {\n      element.remove();\n    });\n    markers = markers.filter(item => !list.includes(item));\n  }\n  function haversineDistance(lat1, lon1, lat2, lon2) {\n    // Radius of the Earth in meters\n    const earthRadius = 6371000; // Approximate value for Earth's mean radius\n\n    // Convert latitude and longitude from degrees to radians\n    const lat1Rad = lat1 * Math.PI / 180;\n    const lon1Rad = lon1 * Math.PI / 180;\n    const lat2Rad = lat2 * Math.PI / 180;\n    const lon2Rad = lon2 * Math.PI / 180;\n\n    // Haversine formula\n    const dLat = lat2Rad - lat1Rad;\n    const dLon = lon2Rad - lon1Rad;\n    const a = Math.sin(dLat / 2) ** 2 + Math.cos(lat1Rad) * Math.cos(lat2Rad) * Math.sin(dLon / 2) ** 2;\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = earthRadius * c;\n    return distance;\n  }\n  function addMarker(coordinates) {\n    if (placeMarker) {\n      if (markers.length < 26) {\n        markers.push(new mapboxgl.Marker().setDraggable(true).setLngLat([coordinates.lng, coordinates.lat]).addTo(map));\n      }\n    } else {\n      toBeRemovedMarkerList = markers.filter(marker => haversineDistance(marker.getLngLat().lat, marker.getLngLat().lng, coordinates.lat, coordinates.lng) < 70);\n      removeMarkers(toBeRemovedMarkerList);\n    }\n  }\n  async function retrieveDirection() {\n    const coordinateArray = markers.map(marker => marker.getLngLat().lng + ',' + marker.getLngLat().lat);\n    const coordinates = coordinateArray.join(';', ',');\n    const response = await fetch(`https://api.mapbox.com/directions/v5/mapbox/${routeType}/${coordinates}?annotations=distance,duration&overview=full&geometries=geojson&access_token=${token}`);\n    routeDetails = await response.json();\n    drawRoute(await routeDetails.routes[0]);\n  }\n  function drawRoute(data) {\n    const instructions = document.getElementById('instructions');\n    const legs = data.legs;\n    let tripInstructions = '';\n    for (const step of legs) {\n      const destination = step.summary.split(',').join(' => ', ',');\n      tripInstructions += `<li id='instruction-item'>${destination}\n                          <div>${Math.round(step.distance)} meter </div>\n                          <div>${Math.floor(step.duration / 60)} min </div>\n                          </li>`;\n    }\n    instructions.innerHTML = `<p><strong>Trip distance: ${Math.round(data.distance)} meter <p><strong>Trip duration: ${Math.floor(data.duration / 60)} min </strong></p><ol>${tripInstructions}</ol>`;\n    const route = data.geometry.coordinates;\n    const geojson = {\n      type: 'Feature',\n      properties: {},\n      geometry: {\n        type: 'LineString',\n        coordinates: route\n      }\n    };\n    if (map.getSource('route')) {\n      map.getSource('route').setData(geojson);\n    } else {\n      map.addLayer({\n        id: 'route',\n        type: 'line',\n        source: {\n          type: 'geojson',\n          data: geojson\n        },\n        layout: {\n          'line-join': 'round',\n          'line-cap': 'round'\n        },\n        paint: {\n          'line-color': '#3887be',\n          'line-width': 5,\n          'line-opacity': 0.75\n        }\n      });\n    }\n    ;\n  }\n  function changeRouteType(type) {\n    routeType = type;\n  }\n  function changeMarkerPlacerState() {\n    placeMarker = !placeMarker;\n  }\n  useEffect(() => {\n    loadMap();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"viewport\",\n        content: \"initial-scale=1,maximum-scale=1,user-scalable=no\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.css\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Place marker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onClick: () => changeMarkerPlacerState()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planner\",\n          children: \"Route by:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"routes\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Traffic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onClick: () => changeRouteType('driving-traffic')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Driving\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onClick: () => changeRouteType('driving')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Walking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onClick: () => changeRouteType('walking')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Cycling\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onClick: () => changeRouteType('cycling')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"plan-route-button\",\n          onClick: () => retrieveDirection(),\n          children: \"Plan route \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"instructions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n_s(MapBox, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MapBox;\nexport default MapBox;\nvar _c;\n$RefreshReg$(_c, \"MapBox\");","map":{"version":3,"names":["mapboxgl","MapboxGeocoder","useEffect","jsxDEV","_jsxDEV","MapBox","_s","token","accessToken","veszprem","longitude","latitude","containerId","zoom","map","Map","container","style","center","markers","toBeRemovedMarkerList","placeMarker","routeType","routeDetails","loadMap","addControl","NavigationControl","on","event","mouseCoordinate","lngLat","wrap","addMarker","addGeocoder","geocoder","resultLongitude","result","resultLatitude","geocoderResultCoordinates","lng","lat","removeMarkers","list","forEach","element","remove","filter","item","includes","haversineDistance","lat1","lon1","lat2","lon2","earthRadius","lat1Rad","Math","PI","lon1Rad","lat2Rad","lon2Rad","dLat","dLon","a","sin","cos","c","atan2","sqrt","distance","coordinates","length","push","Marker","setDraggable","setLngLat","addTo","marker","getLngLat","retrieveDirection","coordinateArray","join","response","fetch","json","drawRoute","routes","data","instructions","document","getElementById","legs","tripInstructions","step","destination","summary","split","round","floor","duration","innerHTML","route","geometry","geojson","type","properties","getSource","setData","addLayer","id","source","layout","paint","changeRouteType","changeMarkerPlacerState","className","children","name","content","fileName","_jsxFileName","lineNumber","columnNumber","href","rel","onClick","_c","$RefreshReg$"],"sources":["/home/rnorbert/IdeaProjects/SARP/sarp/src/components/map/MapBox.jsx"],"sourcesContent":["import './MapBox.css'\nimport mapboxgl from 'mapbox-gl'\nimport MapboxGeocoder from 'mapbox-gl-geocoder'\nimport 'mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css'\nimport { useEffect } from 'react'\n\nfunction MapBox () {\n  const token = 'pk.eyJ1Ijoibm9yZGJlcmciLCJhIjoiY2xudm14NDFoMDB1MzJqb2JnbHFnZ2F2NSJ9.87wgkopxDP_D8B-OkI11LQ'\n  mapboxgl.accessToken = token\n  const veszprem = { longitude: 17.909302, latitude: 47.102809 }\n  const containerId = 'map'\n  const zoom = 12\n  const map = new mapboxgl.Map({\n    container: containerId,\n    style: 'mapbox://styles/mapbox/streets-v12',\n    center: [veszprem.longitude, veszprem.latitude],\n    zoom: zoom\n  })\n  let markers = []\n  let toBeRemovedMarkerList = []\n  let placeMarker = false\n  let routeType = 'walking'\n  let routeDetails\n\n  function loadMap () {\n    /* map = new mapboxgl.Map({\n      container: containerId,\n      style: 'mapbox://styles/mapbox/streets-v12',\n      center: [veszprem.longitude, veszprem.latitude],\n      zoom: zoom\n    }) */\n\n    map.addControl(new mapboxgl.NavigationControl(), 'bottom-right')\n\n    map.on('click', (event) => {\n      const mouseCoordinate = event.lngLat.wrap()\n      addMarker(mouseCoordinate)\n    })\n\n    addGeocoder()\n  }\n\n  function addGeocoder () {\n    const geocoder = new MapboxGeocoder({\n      accessToken: mapboxgl.accessToken,\n      mapboxgl: mapboxgl\n    })\n\n    geocoder.on('result', (event) => {\n      const resultLongitude = event.result.center[0]\n      const resultLatitude = event.result.center[1]\n      const geocoderResultCoordinates = { lng: resultLongitude, lat: resultLatitude }\n\n      addMarker(geocoderResultCoordinates)\n    })\n    map.addControl(geocoder)\n  }\n\n  function removeMarkers (list) {\n    list.forEach(element => {\n      element.remove()\n    })\n    markers = markers.filter(item => !list.includes(item))\n  }\n\n  function haversineDistance (lat1, lon1, lat2, lon2) {\n    // Radius of the Earth in meters\n    const earthRadius = 6371000 // Approximate value for Earth's mean radius\n\n    // Convert latitude and longitude from degrees to radians\n    const lat1Rad = (lat1 * Math.PI) / 180\n    const lon1Rad = (lon1 * Math.PI) / 180\n    const lat2Rad = (lat2 * Math.PI) / 180\n    const lon2Rad = (lon2 * Math.PI) / 180\n\n    // Haversine formula\n    const dLat = lat2Rad - lat1Rad\n    const dLon = lon2Rad - lon1Rad\n    const a =\n      Math.sin(dLat / 2) ** 2 +\n      Math.cos(lat1Rad) * Math.cos(lat2Rad) * Math.sin(dLon / 2) ** 2\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n    const distance = earthRadius * c\n\n    return distance\n  }\n\n  function addMarker (coordinates) {\n    if (placeMarker) {\n      if (markers.length < 26) {\n        markers.push(new mapboxgl.Marker()\n          .setDraggable(true)\n          .setLngLat([coordinates.lng, coordinates.lat])\n          .addTo(map)\n        )\n      }\n    } else {\n      toBeRemovedMarkerList = markers.filter(marker =>\n        haversineDistance(marker.getLngLat().lat, marker.getLngLat().lng, coordinates.lat, coordinates.lng) < 70)\n\n      removeMarkers(toBeRemovedMarkerList)\n    }\n  }\n\n  async function retrieveDirection () {\n    const coordinateArray = markers.map((marker) => marker.getLngLat().lng + ',' + marker.getLngLat().lat)\n    const coordinates = coordinateArray.join(';', ',')\n\n    const response = await fetch(\n      `https://api.mapbox.com/directions/v5/mapbox/${routeType}/${coordinates}?annotations=distance,duration&overview=full&geometries=geojson&access_token=${token}`)\n    routeDetails = await response.json()\n    drawRoute(await routeDetails.routes[0])\n  }\n\n  function drawRoute (data) {\n    const instructions = document.getElementById('instructions')\n    const legs = data.legs\n\n    let tripInstructions = ''\n    for (const step of legs) {\n      const destination = step.summary.split(',').join(' => ', ',')\n      tripInstructions += `<li id='instruction-item'>${destination}\n                          <div>${Math.round(step.distance)} meter </div>\n                          <div>${Math.floor(step.duration / 60)} min </div>\n                          </li>`\n    }\n    instructions.innerHTML = `<p><strong>Trip distance: ${Math.round(\n      data.distance\n    )} meter <p><strong>Trip duration: ${Math.floor(\n      data.duration / 60\n    )} min </strong></p><ol>${tripInstructions}</ol>`\n\n    const route = data.geometry.coordinates\n    const geojson = {\n      type: 'Feature',\n      properties: {},\n      geometry: {\n        type: 'LineString',\n        coordinates: route\n      }\n    }\n\n    if (map.getSource('route')) {\n      map.getSource('route').setData(geojson)\n    } else {\n      map.addLayer({\n        id: 'route',\n        type: 'line',\n        source: {\n          type: 'geojson',\n          data: geojson\n        },\n        layout: {\n          'line-join': 'round',\n          'line-cap': 'round'\n        },\n        paint: {\n          'line-color': '#3887be',\n          'line-width': 5,\n          'line-opacity': 0.75\n        }\n      })\n    };\n  }\n\n  function changeRouteType (type) {\n    routeType = type\n  }\n\n  function changeMarkerPlacerState () {\n    placeMarker = !placeMarker\n  }\n\n  useEffect(() => {\n    loadMap()\n  }, [])\n\n  return (\n    <div className='box'>\n      <header>\n        <meta name=\"viewport\" content=\"initial-scale=1,maximum-scale=1,user-scalable=no\"/>\n        <link href='https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.css' rel='stylesheet' />\n      </header>\n      <div>\n        <div className='settings'>\n          <div>\n            <label>Place marker</label>\n            <input type='checkbox' onClick={() => changeMarkerPlacerState()}/>\n          </div>\n          <div className='planner'>Route by:</div>\n          <div className='routes'>\n            <label>Traffic</label>\n            <input type='checkbox' onClick={ () => changeRouteType('driving-traffic')}/>\n            <label>Driving</label>\n            <input type='checkbox' onClick={() => changeRouteType('driving')}/>\n            <label>Walking</label>\n            <input type='checkbox' onClick={() => changeRouteType('walking')}/>\n            <label>Cycling</label>\n            <input type='checkbox' onClick={() => changeRouteType('cycling')}/>\n          </div>\n          <button id='plan-route-button' onClick={() => retrieveDirection()}>Plan route </button>\n        </div>\n{/*         <div id=\"map\"></div> */}\n        <div id=\"instructions\" ></div>\n        <div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MapBox\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}